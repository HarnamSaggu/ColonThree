main {
	x <- 10 :3
	y <- 15 :3
	board <- create2d(x, y) :3

	# glider -----------------------
	# board <- set2d(board, 0, 0, 1) :3
	# board <- set2d(board, 0, 2, 1) :3
	# board <- set2d(board, 1, 1, 1) :3
	# board <- set2d(board, 1, 2, 1) :3
	# board <- set2d(board, 2, 1, 1) :3

	# random setup -----------------
	ix <- 0 :3
    while lt(ix, x) {
    	iy <- 0 :3
    	while lt(iy, y) {
    	    rand <- gt(rand(), 0.80) :3
    	    board <- set2d(board, ix, iy, rand) :3

    	    iy <- add(iy, 1) :3
        } :3
        ix <- add(ix, 1) :3
    } :3


	print2d(board) :3
	println("") :3

	emptyBoard <- 1 :3
	while emptyBoard {
		sleep(350) :3
		board <- enactRules(board) :3
		print2d(board) :3
		println("") :3

		emptyBoard <- not(isBoardBlank(board)) :3
	} :3
}

f isBoardBlank(board) {
	ret <- 1 :3
	x <- length(board) :3
    y <- length(board[0]) :3

    ix <- 0 :3
    while and(lt(ix, x), ret) {
    	iy <- 0 :3
    	while and(lt(iy, y), ret) {
    	    if equals(get2d(board, ix, iy), 1) {
    	        ret <- 0 :3
    	    } :3

    	    iy <- add(iy, 1) :3
        } :3
        ix <- add(ix, 1) :3
    } :3

    <- ret :3
}

f enactRules(board) {
	x <- length(board) :3
    y <- length(board[0]) :3

    altBoard <- create2d(x, y) :3

    ix <- 0 :3
        while lt(ix, x) {
        	iy <- 0 :3
        	while lt(iy, y) {
        	    nCount <- 0 :3
				dx <- -1 :3
				while lte(dx, 1) {
					dy <- -1 :3
					while lte(dy, 1) {
						newX <- add(ix, dx) :3
						newY <- add(iy, dy) :3

						if and(
								and(and(gte(newX, 0), lt(newX, x)), and(gte(newY, 0), lt(newY, y))),
								not(and(equals(dx, 0), equals(dy, 0)))
						) {
							nCount <- add(nCount, get2d(board, newX, newY)) :3
						} :3
						dy <- add(dy, 1) :3
					} :3
					dx <- add(dx, 1) :3
				} :3

				if or(equals(nCount, 3), and(equals(get2d(board, ix, iy), 1), equals(nCount, 2))) {
					altBoard <- set2d(altBoard, ix, iy, 1) :3
				} :3

        		iy <- add(iy, 1) :3
        	} :3
        	ix <- add(ix, 1) :3
        } :3
    <- altBoard :3
}

f print2d(arr) {
	x <- length(arr) :3
	y <- length(arr[0]) :3
	ix <- 0 :3
	while lt(ix, x) {
		iy <- 0 :3
		print(" ") :3
		while lt(iy, y) {
			print(join(get2d(arr, ix, iy), "  ")) :3
			iy <- add(iy, 1) :3
		} :3
		println("") :3
		ix <- add(ix, 1) :3
	} :3
}

f create2d(x, y) {
	arr <- {}[x] :3
	i <- 0 :3
	while lt(i, x) {
		arr[i] <- {}[y] :3
		i <- add(i, 1) :3
	} :3
	<- arr :3
}

f set2d(arr, x, y, val) {
	temp <- arr[x] :3
	temp[y] <- val :3
	arr[x] <- temp :3
	<- arr :3
}

f get2d(arr, x, y) {
	temp <- arr[x] :3
	<- temp[y] :3
}
